/*
Deployment script for JewelleryDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JewelleryDB"
:setvar DefaultFilePrefix "JewelleryDB"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [ZZ]...';


GO
CREATE SCHEMA [ZZ]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [dbo].[Token]...';


GO
CREATE TABLE [dbo].[Token] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [AccountId]   INT          NOT NULL,
    [TokenString] VARCHAR (50) NOT NULL,
    [StartTime]   DATETIME     NOT NULL,
    [EndTime]     DATETIME     NOT NULL,
    CONSTRAINT [PK_Token] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Account]...';


GO
CREATE TABLE [dbo].[Account] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [MobilePhone] VARCHAR (10)   NOT NULL,
    [Password]    VARCHAR (50)   NOT NULL,
    [FullName]    NVARCHAR (100) NOT NULL,
    [Role]        VARCHAR (50)   NOT NULL,
    CONSTRAINT [PK_Account] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [IX_Account] UNIQUE NONCLUSTERED ([MobilePhone] ASC)
);


GO
PRINT N'Creating [dbo].[Account].[IX_Account_1]...';


GO
CREATE NONCLUSTERED INDEX [IX_Account_1]
    ON [dbo].[Account]([MobilePhone] ASC, [Password] ASC);


GO
PRINT N'Creating [dbo].[Attachment]...';


GO
CREATE TABLE [dbo].[Attachment] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [ProductId]  INT           NOT NULL,
    [FilePath]   VARCHAR (255) NOT NULL,
    [CreateTime] DATETIME      NOT NULL,
    CONSTRAINT [PK_Attachment] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [ProductId]            INT            NOT NULL,
    [AccountId]            INT            NOT NULL,
    [Price]                MONEY          NOT NULL,
    [Quantity]             INT            NOT NULL,
    [OrderTime]            DATETIME       NOT NULL,
    [ResponsibleAccountId] INT            NULL,
    [OrderState]           VARCHAR (20)   NOT NULL,
    [Remarks]              NVARCHAR (200) NULL,
    [UpdateTime]           DATETIME       NOT NULL,
    CONSTRAINT [PK_Order] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderState]...';


GO
CREATE TABLE [dbo].[OrderState] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [OrderId]       INT            NOT NULL,
    [FromAccountId] INT            NOT NULL,
    [ToAccountId]   INT            NOT NULL,
    [OrderState]    VARCHAR (50)   NOT NULL,
    [StartTime]     DATETIME       NOT NULL,
    [EndTime]       DATETIME       NOT NULL,
    [Remarks]       NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_OrderState] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (100) NOT NULL,
    [Price]       MONEY          NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_Product] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [ZZ].[OrderHistory]...';


GO
CREATE TABLE [ZZ].[OrderHistory] (
    [HID]                  INT            IDENTITY (1, 1) NOT NULL,
    [OrderId]              INT            NOT NULL,
    [ProductId]            INT            NOT NULL,
    [AccountId]            INT            NOT NULL,
    [Price]                MONEY          NOT NULL,
    [Quantity]             INT            NOT NULL,
    [ResponsibleAccountId] INT            NULL,
    [OrderState]           VARCHAR (20)   NOT NULL,
    [Remarks]              NVARCHAR (200) NULL,
    [UpdateTime]           DATETIME       NOT NULL,
    CONSTRAINT [PK_OrderHistory] PRIMARY KEY CLUSTERED ([HID] ASC)
);


GO
PRINT N'Creating [dbo].[DF_Attachment_CreateTime]...';


GO
ALTER TABLE [dbo].[Attachment]
    ADD CONSTRAINT [DF_Attachment_CreateTime] DEFAULT (getutcdate()) FOR [CreateTime];


GO
PRINT N'Creating [dbo].[FK_Token_Account]...';


GO
ALTER TABLE [dbo].[Token]
    ADD CONSTRAINT [FK_Token_Account] FOREIGN KEY ([AccountId]) REFERENCES [dbo].[Account] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Attachment_Product]...';


GO
ALTER TABLE [dbo].[Attachment]
    ADD CONSTRAINT [FK_Attachment_Product] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Order_Account]...';


GO
ALTER TABLE [dbo].[Order]
    ADD CONSTRAINT [FK_Order_Account] FOREIGN KEY ([AccountId]) REFERENCES [dbo].[Account] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Order_Product]...';


GO
ALTER TABLE [dbo].[Order]
    ADD CONSTRAINT [FK_Order_Product] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Order_ResponsibleAccount]...';


GO
ALTER TABLE [dbo].[Order]
    ADD CONSTRAINT [FK_Order_ResponsibleAccount] FOREIGN KEY ([ResponsibleAccountId]) REFERENCES [dbo].[Account] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderState_FromAccount]...';


GO
ALTER TABLE [dbo].[OrderState]
    ADD CONSTRAINT [FK_OrderState_FromAccount] FOREIGN KEY ([FromAccountId]) REFERENCES [dbo].[Account] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderState_Order]...';


GO
ALTER TABLE [dbo].[OrderState]
    ADD CONSTRAINT [FK_OrderState_Order] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Order] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrderState_ToAccount]...';


GO
ALTER TABLE [dbo].[OrderState]
    ADD CONSTRAINT [FK_OrderState_ToAccount] FOREIGN KEY ([ToAccountId]) REFERENCES [dbo].[Account] ([Id]);


GO
PRINT N'Creating [ZZ].[FK_OrderHistory_Order]...';


GO
ALTER TABLE [ZZ].[OrderHistory]
    ADD CONSTRAINT [FK_OrderHistory_Order] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Order] ([Id]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
